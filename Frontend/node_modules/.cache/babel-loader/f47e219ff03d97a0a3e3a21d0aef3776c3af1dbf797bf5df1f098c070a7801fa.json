{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Vidly-backend\\\\Frontend\\\\src\\\\components\\\\movies.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport { getMovies, deleteMovies } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport Input from \"./common/input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Movies extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n    this.handleDelete = async _ref => {\n      let {\n        movie\n      } = _ref;\n      const originalMovies = this.state.movies;\n      const movies = originalMovies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n      try {\n        await deleteMovies(movie._id);\n      } catch (ex) {\n        console.log(ex.response, \"caca\");\n        if (ex.response && ex.response === 404) toast.error(\"This movie has already been deleted.\");\n        this.setState({\n          movies: originalMovies\n        });\n      }\n    };\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = {\n        ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n    this.handleSearch = _ref2 => {\n      let {\n        currentTarget: input\n      } = _ref2;\n      const {\n        movies: allMovies\n      } = this.state;\n      const moviesSearched = allMovies.filter(m => console.log(m.title.match(input)));\n      console.log(moviesSearched);\n    };\n    this.getPagedData = () => {\n      const {\n        selectedGenre,\n        movies: allMovies,\n        sortColumn,\n        currentPage,\n        pageSize\n      } = this.state;\n      const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n  async componentDidMount() {\n    const {\n      data: movies\n    } = await getMovies();\n    const {\n      data\n    } = await getGenres();\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...data];\n    this.setState({\n      movies,\n      genres\n    });\n  }\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      genres\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies in the database.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }, this);\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 \",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/movies/new\",\n          className: \"btn btn-primary\",\n          children: \"New Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieTable\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Search...\",\n            onChange: this.handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Showing \", totalCount, \" movies in the database.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n            movies: movies,\n            sortColumn: sortColumn,\n            onDelete: this.handleDelete,\n            onLike: this.handleLike,\n            onSort: this.handleSort\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsCount: totalCount,\n            pageSize: pageSize,\n            currentPage: currentPage,\n            onPageChange: this.handlePageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Movies;","map":{"version":3,"names":["React","Component","Link","toast","MoviesTable","ListGroup","Pagination","getMovies","deleteMovies","getGenres","paginate","_","Input","Movies","state","movies","genres","currentPage","pageSize","sortColumn","path","order","handleDelete","movie","originalMovies","filter","m","_id","setState","ex","console","log","response","error","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","handleSort","handleSearch","currentTarget","input","allMovies","moviesSearched","title","match","getPagedData","filtered","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count"],"sources":["C:/Personal/Vidly-backend/Frontend/src/components/movies.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { getMovies, deleteMovies } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport Input from \"./common/input\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: movies } = await getMovies();\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async ({ movie }) => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovies(movie._id);\r\n    } catch (ex) {\r\n      console.log(ex.response, \"caca\");\r\n      if (ex.response && ex.response === 404)\r\n        toast.error(\"This movie has already been deleted.\");\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = ({ currentTarget: input }) => {\r\n    const { movies: allMovies } = this.state;\r\n\r\n    const moviesSearched = allMovies.filter((m) =>\r\n      console.log(m.title.match(input))\r\n    );\r\n\r\n    console.log(moviesSearched);\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      selectedGenre,\r\n      movies: allMovies,\r\n      sortColumn,\r\n      currentPage,\r\n      pageSize,\r\n    } = this.state;\r\n    const filtered =\r\n      selectedGenre && selectedGenre._id\r\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\r\n        : allMovies;\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn, genres } = this.state;\r\n\r\n    if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-2 \">\r\n          <ListGroup\r\n            items={genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <Link to=\"/movies/new\" className=\"btn btn-primary\">\r\n            New Movie\r\n          </Link>\r\n\r\n          <div className=\"movieTable\">\r\n            <Input placeholder=\"Search...\" onChange={this.handleSearch} />\r\n            <p>Showing {totalCount} movies in the database.</p>\r\n            <MoviesTable\r\n              movies={movies}\r\n              sortColumn={sortColumn}\r\n              onDelete={this.handleDelete}\r\n              onLike={this.handleLike}\r\n              onSort={this.handleSort}\r\n            />\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}